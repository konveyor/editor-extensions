name: Release

on:
  push:
    branches:
      - "main"
      - "release-*"

  pull_request:
    branches:
      - "main"
      - "release-*"

  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Branch to release (e.g., main, release-1.0)'
        default: 'main'
      architectures:
        description: 'Arch to build'
        default: 'linux, macos, windows'
      run_tests:
        description: 'Run tests before packaging and releasing'
        default: 'true'
      
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux
      max-parallel: 1
    if: ${{ contains( toLower( github.event.inputs.architectures ), matrix.arch ) || github.event_name != 'workflow_dispatch' }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: "vscode/.nvmrc"

      - name: Cache extension node_modules
        uses: actions/cache@v3
        with:
          path: vscode/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('vscode/package-lock.json') }}

      - name: Install dependencies
        run: |
          cd vscode
          npm version
          npm ci

      - name: Lint sources
        run: |
          cd vscode 
          npm run lint

      - name: Build
        run: |
          cd vscode
          npm run package

      - name: Generate .vsix package
        run: |
          npm install -g @vscode/vsce
          cd vscode
          vsce package

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension-${{ matrix.arch }}-${{ github.run_id }}
          path: "*.vsix"
      